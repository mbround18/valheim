name: Docker

on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main
    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  DOCKER_IMAGE_NAME: mbround18/valheim

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build Odin
        run: |
          # Gather Utils
          . ./.github/scripts/utils.sh

          # Parse version
          VERSION="${GITHUB_REF}"
          VERSION="$(parse_version)"
          echo VERSION=$VERSION

          docker-compose \
          --file docker-compose.yml \
          build odin
          
      - name: Build Valheim
        run: |
          docker-compose \
          --file docker-compose.yml build \
          --build-arg GITHUB_SHA="${GITHUB_SHA}" \
          --build-arg GITHUB_REF="${GITHUB_REF}" \
          --build-arg GITHUB_REPOSITORY="${GITHUB_REPOSITORY}" \
          valheim

  push_odin:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Log into registry
        run: |
          echo "${{ github.token }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
          echo "${{ secrets.DOCKER_TOKEN }}" | docker login registry.hub.docker.com -u mbround18 --password-stdin

      - name: Build image
        run: |
          docker build . \
          --file Dockerfile.odin \
          --tag "${DOCKER_IMAGE_NAME}-odin"

      - name: Push Image to DockerHub
        run: |
          # Gather Utils
          . ./.github/scripts/utils.sh

          # Parse variables
          IMAGE_ID=registry.hub.docker.com/$DOCKER_IMAGE_NAME-odin

          # Change all uppercase to lowercase
          IMAGE_ID="${IMAGE_ID,,}"

          # Parse version
          VERSION="${GITHUB_REF}"
          VERSION="$(parse_version)"

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag "${DOCKER_IMAGE_NAME}-odin" $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
          
  push_valheim:
    # Ensure test job passes before pushing image.
    needs: push_odin

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Log into registry
        run: |
          echo "${{ github.token }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
          echo "${{ secrets.DOCKER_TOKEN }}" | docker login registry.hub.docker.com -u mbround18 --password-stdin

      - name: Build image
        run: |
          docker build .                                        \
          --file Dockerfile                                     \
          --build-arg GITHUB_SHA="${GITHUB_SHA}"                \
          --build-arg GITHUB_REF="${GITHUB_REF}"                \
          --build-arg GITHUB_REPOSITORY="${GITHUB_REPOSITORY}"  \
          --tag $DOCKER_IMAGE_NAME

      - name: Push Image to DockerHub
        run: |
          # Gather Utils
          . ./.github/scripts/utils.sh

          # Parse variables
          IMAGE_ID=registry.hub.docker.com/$DOCKER_IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID="${IMAGE_ID,,}"

          # Parse version
          VERSION="${GITHUB_REF}"
          VERSION="$(parse_version)"

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $DOCKER_IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
          
          # Send release notification
          docker run --rm \
          -e NAME="New Version: ${DOCKER_IMAGE_NAME}:${VERSION}" \
          mbround18/valheim-odin:$VERSION notify "New release of ${DOCKER_IMAGE_NAME}:${VERSION} !! Please use pull the latest ${DOCKER_IMAGE_NAME}:${VERSION}. Then restart your server via your preferred method." \
          --webhook "${{ secrets.RELEASE_WEBHOOK }}"
