name: Docker Build

on:
  pull_request:
    types:
      - labeled
      - edited
      - synchronize
      - unlabeled
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  cancel-previous:
    name: Cancel Previous
    runs-on: ubuntu-latest
    steps:
      - uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      max-parallel: 1
      matrix:
        image: [odin, valheim]
        include:
          - image: odin
            push: ${{ contains(github.event.pull_request.labels.*.name, 'canary') }}
          - image: valheim
            push: ${{ contains(github.event.pull_request.labels.*.name, 'canary') }}
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        if: github.event_name != 'pull_request'
        with:
          username: mbround18
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Docker meta
        id: meta
        uses: crazy-max/ghaction-docker-meta@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            mbround18/${{ matrix.image }}

          # generate Docker tags based on the following events/attributes
          tags: |
            type=sha

      - name: Build ${{ matrix.image }}
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: ./Dockerfile.${{ matrix.image }}
          push: ${{ matrix.push }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            "GITHUB_SHA=${GITHUB_SHA}"
            "GITHUB_REF=${GITHUB_REF}"
            "GITHUB_REPOSITORY=${GITHUB_REPOSITORY}"
            "ODIN_IMAGE_VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}"

      - name: Finalization
        run: echo "Finalized"


