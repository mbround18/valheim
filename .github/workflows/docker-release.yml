name: Docker Release

on:
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      max-parallel: 1
      matrix:
        image: [odin, valheim]

    steps:
      - uses: actions/checkout@v2

      - name: Docker meta
        id: meta
        uses: crazy-max/ghaction-docker-meta@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            mbround18/${{ matrix.image }}
            ghcr.io/mbround18/${{ matrix.image }}

          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: mbround18
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.${{ matrix.image }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            "GITHUB_SHA=${GITHUB_SHA}"
            "GITHUB_REF=${GITHUB_REF}"
            "GITHUB_REPOSITORY=${GITHUB_REPOSITORY}"

      - name: Send Release Notification
        if: github.event_name != 'pull_request' && "${{ matrix.image }}" == "valheim"
        env:
          NAME: "GitHub Release Notification"
        run: |
          if [ "${{ matrix.image }}" != "valheim" ]; then
            exit 0
          fi

          # Send release notification
          docker run --rm \
          -e NAME="New Version: mbround18/${{ matrix.image }}:latest" \
          mbround18/odin:latest notify                 \
            --webhook "${{ secrets.RELEASE_WEBHOOK }}" \
            --title "New Release! <3"                  \
            "New release of "
          "New release of mbround18/${{ matrix.image }}:latest!! Tagged with: ${{ steps.meta.outputs.tags }}!!" \

